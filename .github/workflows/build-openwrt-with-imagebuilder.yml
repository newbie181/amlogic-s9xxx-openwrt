#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description:   Build OpenWrt with Image Builder
# Instructions:  https://openwrt.org/docs/guide-user/additional-software/imagebuilder
# Download from: https://downloads.openwrt.org/releases
#                https://downloads.immortalwrt.org/releases
#=====================================================================================

name: Build OpenWrt with ImageBuilder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "openwrt:24.10.1"
        type: choice
        options:
          - openwrt:24.10.1 [cite: 2]
          - openwrt:24.10.0 [cite: 2]
          - immortalwrt:24.10.1 [cite: 2]
          - immortalwrt:24.10.0 [cite: 2]
      openwrt_board:
        description: "Select device board"
        required: false
        default: "all"
        type: choice
        options:
          - all [cite: 3]
          - s905w_s905x_s905x-b860h_s905x-t95_s905x2_s905x3_s905x3-x88-pro-x3_s912_s912-m8s-pro_s912-phicomm-t1_s912-t95z-plus [cite: 3]
          - s912-x92_s922x_s922x-ct2000_s922x-reva_seewo-sv21_smart-am40_smart-am60_station-m1_sw799_swan1-w28 [cite: 3]
          - tanix-tx6_tb-ls3399_tn3399_tpm312_tqc-a01_tvi3315a_vplus_wxy-oec_xiaobao_yskj_zcube1-max_zk-r39a_zysj [cite: 3]
          - a311d [cite: 3]
          - alark35-3500 [cite: 3]
          - beikeyun [cite: 3]
          - chainedbox [cite: 3]
          - crrc [cite: 3]
          - dg3399 [cite: 4]
          - dg-tn3568 [cite: 4]
          - dlfr100 [cite: 4]
          - e20c [cite: 4]
          - e25 [cite: 4]
          - eaidk-610 [cite: 4]
          - emb3531 [cite: 4]
          - fine3399 [cite: 4]
          - firefly-rk3399 [cite: 4]
          - fmx1-pro [cite: 5]
          - jp-tvbox [cite: 5]
          - h28k [cite: 5]
          - h66k [cite: 5]
          - h68k [cite: 5]
          - h69k [cite: 5]
          - h88k [cite: 5]
          - h88k-v3 [cite: 5]
          - h96-max-m2 [cite: 5]
          - hs530r [cite: 6]
          - hugsun-x99 [cite: 6]
          - ipc-r [cite: 6]
          - king3399 [cite: 6]
          - kylin3399 [cite: 6]
          - lckfb-tspi [cite: 6]
          - leez [cite: 6]
          - lx-r3s [cite: 6]
          - mrkaio-m68s [cite: 6]
          - nanopc-t6 [cite: 6]
          - nanopi-r5c [cite: 7]
          - nanopi-r5s [cite: 7]
          - orangepi-5-plus [cite: 7]
          - panther-x2 [cite: 7]
          - r66s [cite: 7]
          - r68s [cite: 7]
          - renegade-rk3328 [cite: 7]
          - rk3318-box [cite: 7]
          - rock5b [cite: 7]
          - rock5c [cite: 8]
          - ruisen-box [cite: 8]
          - s905 [cite: 8]
          - s905-beelink-mini [cite: 8]
          - s905-mxqpro-plus [cite: 8]
          - s905d [cite: 8]
          - s905d-ki-pro [cite: 8]
          - s905d-sml5442tw [cite: 8]
          - s905l [cite: 8]
          - s905l-aurora-1s [cite: 9]
          - s905l-b860av21u [cite: 9]
          - s905l-mg101 [cite: 9]
          - s905l2 [cite: 9]
          - s905l2-e900v21e [cite: 9]
          - s905l2-wojia [cite: 9]
          - s905l3 [cite: 9]
          - s905l3-cm211 [cite: 9]
          - s905l3-unt400g1 [cite: 9]
          - s905l3-unt402a [cite: 10]
          - s905l3a [cite: 10]
          - s905l3a-cm311 [cite: 10]
          - s905l3a-m401a [cite: 10]
          - s905l3b [cite: 10]
          - s905l3b-e900v21d [cite: 10]
          - s905l3b-e900v22d [cite: 10]
          - s905l3b-e900v22e [cite: 10]
          - s905l3b-ip103h [cite: 10]
          - s905l3b-rg020et-ca [cite: 11]
          - s905l3b-unt403a [cite: 11]
          - s905lb-ipbs9505 [cite: 11]
          - s905lb-q96-mini [cite: 11]
          - s905lb-r3300l [cite: 11]
          - s905mb [cite: 11]
          - s905w [cite: 11]
          - s905w-w95 [cite: 11]
          - s905w-x96-mini [cite: 11]
          - s905w-x96w [cite: 12]
          - s905x [cite: 12]
          - s905x-b860h [cite: 12]
          - s905x-nexbox-a95x [cite: 12]
          - s905x-t95 [cite: 12]
          - s905x-tbee [cite: 12]
          - s905x-tx9 [cite: 12]
          - s905x2 [cite: 12]
          - s905x2-km3 [cite: 12]
          - s905x2-x96max-2g [cite: 13]
          - s905x3 [cite: 13]
          - s905x3-2101 [cite: 13]
          - s905x3-a100 [cite: 13]
          - s905x3-a95xf3 [cite: 13]
          - s905x3-a95xf3-gb [cite: 13]
          - s905x3-b [cite: 13]
          - s905x3-h96max [cite: 13]
          - s905x3-hk1 [cite: 13]
          - s905x3-ip1001m [cite: 14]
          - s905x3-q1 [cite: 14]
          - s905x3-q2 [cite: 14]
          - s905x3-tx3 [cite: 14]
          - s905x3-tx3-bz [cite: 14]
          - s905x3-ugoosx3 [cite: 14]
          - s905x3-whale [cite: 14]
          - s905x3-x88-pro-x3 [cite: 14]
          - s905x3-x96air [cite: 14]
          - s905x3-x96air-gb [cite: 15]
          - s905x3-x96max [cite: 15]
          - s912 [cite: 15]
          - s912-h96pro-plus [cite: 15]
          - s912-m8s-pro [cite: 15]
          - s912-nexbox-a1 [cite: 15]
          - s912-nexbox-a2 [cite: 15]
          - s912-onecloudpro [cite: 15]
          - s912-phicomm-t1 [cite: 15]
          - s912-t95z-plus [cite: 16]
          - s912-tx8-max [cite: 16]
          - s912-tx9-pro-2g [cite: 16]
          - s912-tx9-pro-3g [cite: 16]
          - s912-x92 [cite: 16]
          - s912-zyxq-fake [cite: 16]
          - s922x [cite: 16]
          - s922x-ct2000 [cite: 16]
          - s922x-gtking [cite: 16]
          - s922x-gtkingpro-h [cite: 17]
          - s922x-odroid-n2 [cite: 17]
          - s922x-reva [cite: 17]
          - s922x-ugoos-am6 [cite: 17]
          - seewo-sv21 [cite: 17]
          - smart-am40 [cite: 17]
          - smart-am60 [cite: 17]
          - station-m1 [cite: 17]
          - sv-33a6x [cite: 17]
          - swan1-w28 [cite: 17]
          - sw799 [cite: 18]
          - tanix-tx6 [cite: 18]
          - tb-ls3399 [cite: 18]
          - tn3399 [cite: 18]
          - tpm312 [cite: 18]
          - tqc-a01 [cite: 18]
          - tvi3315a [cite: 18]
          - vplus [cite: 18]
          - wxy-oec [cite: 18]
          - xiaobao [cite: 19]
          - yskj [cite: 19]
          - zcube1-max [cite: 19]
          - zk-r39a [cite: 19]
          - zysj [cite: 19]
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.1.y_6.12.y"
        type: choice
        options:
          - 5.4.y [cite: 20]
          - 5.10.y [cite: 20]
          - 5.15.y [cite: 20]
          - 6.1.y [cite: 20]
          - 6.6.y [cite: 20]
          - 6.12.y [cite: 20]
          - 5.4.y_5.10.y [cite: 20]
          - 5.15.y_6.1.y [cite: 20]
          - 6.1.y_6.12.y [cite: 21]
          - 6.1.y_6.6.y [cite: 21]
          - 6.6.y_6.12.y [cite: 21]
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel" [cite: 22]
        type: choice
        options:
          - ophub/kernel [cite: 22]
      kernel_usage:
        description: "Set the tags of the stable kernel." [cite: 23]
        required: false [cite: 23]
        default: "stable" [cite: 23]
        type: choice [cite: 23]
        options:
          - stable [cite: 23]
          - flippy [cite: 23]
          - dev [cite: 23]
          - beta [cite: 23]
      builder_name:
        description: "Set OpenWrt builder signature." [cite: 24]
        required: false [cite: 24]
        default: "ophub" [cite: 24]
        type: choice [cite: 24]
        options:
          - ophub [cite: 24]
          - angel [cite: 24]
          - yourname [cite: 24]

env:
  TZ: America/New_York
  IMAGEBUILDER_SH: config/imagebuilder/imagebuilder.sh

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4 [cite: 25]

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null [cite: 26]
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}" [cite: 26]
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null [cite: 26]
          sudo swapoff -a [cite: 26]
          sudo rm -f /swapfile /mnt/swapfile [cite: 26]
          sudo -E apt-get -y update [cite: 26]
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* [cite: 27]
          dotnet* powershell openjdk* mongodb* moby* || true [cite: 27]
          sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt) [cite: 27]
          sudo -E systemctl daemon-reload [cite: 27]
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge [cite: 27]
          sudo -E apt-get clean [cite: 27]
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile} [cite: 27]
          sudo rm -rf ~/{.cargo,.dotnet,.rustup} [cite: 28]
          sudo timedatectl set-timezone "${TZ}" [cite: 28]
          echo "status=success" >> ${GITHUB_OUTPUT} [cite: 28]

      - name: Create simulated physical disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1) [cite: 29]
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4) [cite: 29]
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img [cite: 29]
          sudo truncate -s "${root_size}"G /root.img [cite: 29]
          sudo losetup /dev/loop6 /mnt/mnt.img [cite: 29]
          sudo losetup /dev/loop7 /root.img [cite: 30]
          sudo pvcreate /dev/loop6 [cite: 30]
          sudo pvcreate /dev/loop7 [cite: 30]
          sudo vgcreate github /dev/loop6 /dev/loop7 [cite: 30]
          sudo lvcreate -n runner -l 100%FREE github [cite: 30]
          sudo mkfs.xfs /dev/github/runner [cite: 30]
          sudo mkdir -p /builder [cite: 30]
          sudo mount /dev/github/runner /builder [cite: 30]
          sudo chown -R runner.runner /builder [cite: 31]
          df -Th [cite: 31]

      - name: Build OpenWrt Rootfs [ ${{ inputs.releases_branch }} ]
        id: imagebuilder
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          RELEASES_BRANCH="${{ inputs.releases_branch }}" [cite: 32]
          chmod +x ${IMAGEBUILDER_SH} [cite: 32]
          ${IMAGEBUILDER_SH} ${RELEASES_BRANCH} [cite: 32]
          echo "RELEASES_TAG=${RELEASES_BRANCH/:/_}" >> ${GITHUB_ENV} [cite: 32]
          echo "build_tag=OpenWrt_imagebuilder_${{ env.RELEASES_TAG }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT} [cite: 32]
          echo "status=success" >> ${GITHUB_OUTPUT} [cite: 32]

      - name: Clear server space
        id: clean
        # Kondisi if ini mungkin perlu diperiksa di langkah sebelumnya
        # karena jika imagebuilder gagal, langkah ini tidak akan dieksekusi.
        # Asumsi langkah imagebuilder sudah dieksekusi sebelumnya.
        if: ${{ steps.imagebuilder.outputs.status }} == 'success' && !cancelled() # Biarkan ini jika langkah imagebuilder memang mengeluarkan status
        run: |
          cd imagebuilder [cite: 34]

          echo "DEBUG: Listing contents of current directory (imagebuilder/):" [cite: 34]
          ls -l . [cite: 34]

          echo "DEBUG: Listing contents of bin/targets/:" [cite: 35]
          ls -R bin/targets/ # <-- TAMBAHKAN ATAU PASTIKAN BARIS INI ADA! [cite: 35]

          # Periksa apakah direktori output ada, jika tidak, buat [cite: 36]
          [[ -d "output" ]] || mkdir output [cite: 37]

          # Coba salin file. Kita akan memastikan apakah file *benar-benar* ada. [cite: 38]
          # Jika file tidak ada, perintah ini akan gagal, tetapi kita akan punya log ls -R [cite: 38]
          # untuk memahami mengapa. [cite: 38]

          # PERBAIKI: Lebih baik tambahkan pemeriksaan keberadaan file sebelum copy [cite: 39]
          ROOTFS_FILE=$(find bin/targets -name "*rootfs.tar.gz" -print -quit) # Mencari file rootfs [cite: 39]
          if [ -f "$ROOTFS_FILE" ]; then [cite: 40]
            echo "DEBUG: RootFS file found: $ROOTFS_FILE" [cite: 40]
            cp -f "$ROOTFS_FILE" output/ [cite: 40]
          else [cite: 40]
            echo "ERROR: rootfs.tar.gz not found after imagebuilder step!" [cite: 41]
            exit 1 # Gagal secara eksplisit jika file tidak ditemukan [cite: 41]
          fi

          # Salin file .config jika perlu [cite: 41]
          if [ -f ".config" ]; then [cite: 42]
            cp -f .config output/config [cite: 42]
          else [cite: 42]
            echo "WARNING: .config file not found in imagebuilder directory." [cite: 43]
          fi

          # Hapus file lain untuk menghemat ruang (tetap hati-hati dengan perintah rm -rf) [cite: 43]
          # rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null [cite: 43]
          # Catatan: Perintah ini akan menghapus semua selain 'output'. [cite: 44]
          # Pastikan ini yang Anda inginkan. [cite: 44]
          # Jika Anda ingin menyimpan hasil build selain 'output', modifikasi grep -v. [cite: 45]
          # Misalnya, untuk menghapus semua kecuali 'output' dan 'bin', gunakan: [cite: 45]
          # rm -rf $(ls . | grep -v "^output$" | grep -v "^bin$" | xargs) 2>/dev/null [cite: 45]

          # --- Baris-baris ini dari skrip asli Anda, saya pindahkan ke sini untuk menjaga urutan ---
          [[ -d "/builder/openwrt" ]] || mkdir -p /builder/openwrt [cite: 46]
          ln -sf /builder/openwrt /home/runner/work/_actions/ophub/amlogic-s9xxx-openwrt/main/openwrt [cite: 46]
          df -hT ${PWD} [cite: 46]
          echo "status=success" >> ${GITHUB_OUTPUT} [cite: 46]

      - name: Upload OpenWrt to Release
        uses: ncipollo/release-action@main
        if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.imagebuilder.outputs.build_tag }} [cite: 47]
          artifacts: imagebuilder/output/* [cite: 47]
          allowUpdates: true [cite: 47]
          removeArtifacts: false [cite: 47]
          replacesArtifacts: true [cite: 47]
          token: ${{ secrets.GITHUB_TOKEN }} [cite: 47]

      - name: Packaging OpenWrt
        if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: imagebuilder/output/*rootfs.tar.gz [cite: 48]
          openwrt_board: ${{ inputs.openwrt_board }} [cite: 48]
          openwrt_kernel: ${{ inputs.openwrt_kernel }} [cite: 48]
          auto_kernel: ${{ inputs.auto_kernel }} [cite: 48]
          kernel_repo: ${{ inputs.kernel_repo }} [cite: 48]
          kernel_usage: ${{ inputs.kernel_usage }} [cite: 48]
          builder_name: ${{ inputs.builder_name }} [cite: 48]

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main [cite: 49]
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled() [cite: 49]
        with:
          tag: ${{ steps.imagebuilder.outputs.build_tag }} [cite: 49]
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/* [cite: 49]
          allowUpdates: true [cite: 49]
          removeArtifacts: false [cite: 49]
          replacesArtifacts: true [cite: 49]
          token: ${{ secrets.GITHUB_TOKEN }} [cite: 49]
          body: | [cite: 50]
            ### OpenWrt Image information [cite: 51]
            - Default IP: 192.168.1.1 [cite: 51]
            - Default username: root [cite: 51]
            - Default password: password [cite: 51]
            - Default WIFI name: OpenWrt [cite: 51]
            - Default WIFI password: none [cite: 51]
            ### Install to EMMC [cite: 51]
            - Login to OpenWrt → System → Amlogic Service → Install OpenWrt [cite: 52]
            ### OpenWrt Image Verification [cite: 52]
            - sha256sum [cite: 52]
